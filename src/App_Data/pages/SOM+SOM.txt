   1.      Author: cerberus, Xianny modded by celien
   2.      ; Date: March 2nd 2008
   3.      ; Version: 3.15
   4.      ; SoM translator script
   5.       
   6.      ;---edit lines 27,28,53,54 for accuracy (range) settings
   7.       
   8.      on *:text:!som*:#:{
   9.        if ($chan isin $($dp3.channels) || $chan isin $($dp3.gen.channels) && $chan $+ . !isin $($dp3.channels) && $chan $+ . !isin $($dp3.gen.channels) ) {
  10.       
  11.          ;---help
  12.          if ( $2 == $null ) {
  13.            dp3.out.n $nick !som <7number12> <7number12> Numbers should be raw 12and from SoMs taken in the same hour 12(no change)
  14.            dp3.out.n $nick Additional SoMs lowers numbers of possible values.
  15.            dp3.out.n $nick SoMs are randomised by integer percentages (i.e. 120%, 90%, but never 120.402%). By comparing numbers from two or more SoMs, we can sometimes ascertain the accurate in-game value.
  16.            halt
  17.          }
  18.       
  19.          var %soms = $remove($2-,$chr(44))
  20.       
  21.       
  22.          ;---creating first possibility list
  23.       
  24.          ;---setting SoM intel, creating window
  25.          var %som = $gettok(%soms,1,32)
  26.          if ( $window(@som1) == $null ) { window -lesz @som1 }
  27.       
  28.          var %i = 0.7
  29.          while ( %i < 1.31 ) {
  30.       
  31.            ;---possibilities, with rounding
  32.            var %t = $int($calc(%som / %i))
  33.            var %tf = $calc(%t + 1)
  34.            var %tc = $calc(%t - 1)
  35.            if ( $int($calc(%t * %i)) == %som || $int($calc(%t * %i + 1)) == %som || $int($calc(%t * %i - 1)) == %som ) { aline @som1 %t }
  36.            if ( $int($calc(%tf * %i)) == %som || $int($calc(%tf * %i + 1)) == %som || $int($calc(%tf * %i - 1)) == %som ) { aline @som1 %tf }
  37.            if ( $int($calc(%tc * %i)) == %som || $int($calc(%tc * %i + 1)) == %som || $int($calc(%tc * %i - 1)) == %som ) { aline @som1 %tc }
  38.       
  39.            inc %i 0.01
  40.          }
  41.       
  42.       
  43.          ;---looping through rest of soms
  44.          var %count = 2
  45.          while ( $gettok(%soms,%count,32) != $null ) {
  46.       
  47.            ;---setting SoM intel, creating windows
  48.            var %som = $gettok(%soms,%count,32)
  49.            var %prev = $calc(%count - 1)
  50.            if ( $window(@som $+ %count) != $null ) { clear @som $+ %count }
  51.            elseif ( $window(@som $+ %count) == $null ) { window -lesz @som $+ %count }
  52.       
  53.            ;---possibilities
  54.            var %i = 0.7
  55.            while ( %i < 1.31 ) {
  56.              var %t = $int($calc(%som / %i))
  57.              var %tf = $calc(%t + 1)
  58.              var %tc = $calc(%t - 1)
  59.       
  60.              ;---terms, checking rounding and comparing with prev. results
  61.              som.compare %prev %count %t %i %som
  62.              som.compare %prev %count %tf %i %som
  63.              som.compare %prev %count %tc %i %som
  64.       
  65.              inc %i 0.01
  66.            }
  67.            inc %count
  68.          }
  69.
       
  70.
       
  71.
          ;---listing results
  72.
          var %count = $calc(%count - 1)
  73.
          var %num = 1
  74.
          while ( $line(@som $+ %count,%num) != $null ) {
  75.
            if ( $line(@som $+ %count,%num) !isin %final ) { var %final = %final $line(@som $+ %count,%num) }
  76.
            inc %num
  77.
          }
  78.
          dp3.out.c $chan $nick $+ , possible defence values are7 %final 
  79.
          clear @som1
  80.
       
  81.
        }
  82.
      }
  83.
       
  84.
       
  85.
      ;---ALIAS terms, checking rounding and comparing with prev. results
  86.
      alias som.compare {
  87.
        if ( $int($calc($3 * $4)) == $5 || $int($calc($3 * $4 + 1)) == $5 || $int($calc($3 * $4 - 1)) == $5 ) {
  88.
          var %lines = $line(@som $+ $1,0)
  89.
          var %l = 1
  90.
          while ( %l <= %lines ) {
  91.
            if ( $3 == $line(@som $+ $1,%l) ) { aline @som $+ $2 $3 }
  92.
            inc %l
  93.
          }
  94.
        }
  95.
      }